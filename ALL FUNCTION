_________________________________________________________________________________________________________________________________________________
> SELECT DISTINCT ... FROM
> SELECT ... AS ... FROM				-- выбирает что-то с названием столбика как AS
> SELECT DISTINCT ... FROM ... LIMIT N, X               -- выбирает X элементов, начиная с N
> SELECT ... FROM ... ORDER BY 1 DESC, 2            	-- Если DESC то сортирует в порядке убывания. Сначала отсортирует 1 в обратном порядке,
							   затем 2 в обычном порядке (алфавитном, по возрастанию)

> SELECT ... FROM ... WHERE ... AND / OR / NOT          -- Приоритеты операций: круглые скобки --> умножение  (*),  деление (/) --> 
							   сложение  (+), вычитание (-) --> операторы сравнения (=, >, <, >=, <=, <>) --> 
							   NOT --> AND --> OR
> SELECT ... FROM ... WHERE ... IN / NOT IN (.., ..) /  -- IN предлагает один из вариантов, BETWEEN промежуток
				BETWEEN ... AND ...  
> SELECT ... FROM ... WHERE ... LIKE '%..%' /		-- % означает любое число символов (включая пустоту), _ означает конкретно 1 любой символ
				LIKE '___'

> ... WHERE ... = < > != ANY (SELECT ...)               -- По очереди подставляет и что-то должно соотноситься либо с 
                         ALL (SELECT ...)                  одним из (ANY) или всеми (ALL)
> SELECT A FROM ... WHERE EXISTS (SELECT A FROM ...)	-- Выбирает значения, если существует такое A...
_________________________________________________________________________________________________________________________________________________
> SELECT ... FROM ... UNION (UNION ALL)			-- Позволяет присоединять строки из одного запроса к строкам из 
  SELECT ... FROM ... UNION ...				   другого запроса (все - UNION ALL, или удаляя дубликаты UNION)
> SELECT ... FROM ... INTERSECT (EXCEPT)		-- Позволяет оставить только те строки, которые пересекаются в запросах /
  SELECT ... FROM ...					   или из строк первого запроса исключаются строки второго (EXCEPT)
> SELECT A FROM Table GROUP BY A HAVING count(B) > 2	-- позволяет с помощью группировки и having выбирать рассчитываемое
							   условие (MIX, MAX, AVG, Count ...)
_________________________________________________________________________________________________________________________________________________
> UPDATE ... SET 
> INSERT INTO ... VALUES
> UPDATE "my_table" SET "a" = 5; 			-- такая запись позволяет в именах таблиц или столбцов таблиц использовать 
							   в т.ч. select и пр. функции

> INNER JOIN / LEFT JOIN / RIGHT JOIN ... ON ... = ...
> CASE WHEN ... THEN ...	
       WHEN ... THEN ...
       ELSE ...
  END AS Name
  //
  IF (условие, ... если TRUE, ... если FALSE)


> SELECT ..., cast(avg(...) AS decimal (10, 2)) FROM ... GROUP BY ...	 -- cast позволяет преобразовать данные (даже выражение) в другой формат,
									    в т.ч. с округление до 2 знаков после запятой и длиной в 10 знаков.
> SELECT ..., DATEPART (yy, ДАТА)			-- Позволяет указывать от даты (день недели, название дня недели, день в месяце, название
	      DATENAME (mm, ДАТА) 			   месяца, день года, квартал и пр.)
> ... CONVERT(datetime, [date], 3) 			-- Переводит запись [date] (или другую) в формат datetime (или любой другой), где 3 - 
							   тип формата, у даты и времени самый большой спектр форматов.

> ISNULL / COALESCE 					-- Еще предстоит изучить
> WITH ABC (... , ... , ...) AS (SELECT ... FROM ... UNION ...) 	 -- создает оконную функцию (CREATE VIEW), дальше его можно использовать
									    в обычном SELECT (SELECT ... FROM ABC...)

> 

_________________________________________________________________________________________________________________________________________________
МАТЕМАТИЧЕСКИЕ ФУНКЦИИ:
CEILING(x) 		-- возвращает наименьшее целое число, большее или равное x (округляет до целого числа в большую сторону)
ROUND(x, k)		-- округляет значение x до k знаков после запятой, если k не указано – x округляется до целого
FLOOR(x)		-- возвращает наибольшее целое число, меньшее или равное x (округляет до  целого числа в меньшую сторону)
POWER(x, y)		-- возведение x в степень y
SQRT(x)			-- квадратный корень из x
DEGREES(x)		-- конвертирует значение x из радиан в градусы
RADIANS(x)		-- конвертирует значение x из градусов в радианы
ABS(x)			-- модуль числа x
PI()			-- pi = 3.1415926...
=			-- равно
<>			-- не равно
_________________________________________________________________________________________________________________________________________________



