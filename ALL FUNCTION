______________________________________________________________________________________________________________________
> SELECT DISTINCT ... FROM
> SELECT DISTINCT ... FROM ... LIMIT N, X               -- выбирает X элементов, начиная с N
> SELECT ... FROM ... ORDER BY ... DESC                 -- Если DESC то сортирует в порядке убывания
> SELECT ... FROM ... WHERE ... AND / OR / NOT          -- IN предлагает один из вариантов
                            / IN / NOT IN (.., ..)       
> ... WHERE ... = < > != ANY (SELECT ...)               -- По очереди подставляет и что-то должно соотноситься либо с 
                         ALL (SELECT ...)                  одним из (ANY) или всеми (ALL)
> SELECT A FROM ... WHERE EXISTS (SELECT A FROM ...)	-- Выбирает значения, если существует такое A...

> SELECT ... FROM ... UNION (UNION ALL)			-- Позволяет присоединять строки из одного запроса к строкам из 
  SELECT ... FROM ... UNION ...				   другого запроса (все - UNION ALL, или удаляя дубликаты UNION)
> SELECT ... FROM ... INTERSECT (EXCEPT)		-- Позволяет оставить только те строки, которые пересекаются в запросах /
  SELECT ... FROM ...					   или из строк первого запроса исключаются строки второго (EXCEPT)

> UPDATE ... SET 
> INSERT INTO ... VALUES
> UPDATE "my_table" SET "a" = 5; 			                 -- такая запись позволяет в именах таблиц или столбцов таблиц
						                            использовать в т.ч. select и пр. функции

> INNER JOIN / LEFT JOIN / RIGHT JOIN ... ON ... = ...
> CASE WHEN ... THEN ...	
       WHEN ... THEN ...
       ELSE ...
  END AS Name
> SELECT ..., cast(avg(...) AS decimal (10, 2)) FROM ... GROUP BY ...	 -- cast позволяет преобразовать данные (даже выражение) в другой формат,
									    в т.ч. с округление до 2 знаков после запятой и длиной в 10 знаков.
> SELECT A FROM Table GROUP BY A HAVING count(B) > 2			 -- позволяет с помощью группировки и having выбирать рассчитываемое
									    условие (MIX, MAX, AVG, Count ...)
> 






______________________________________________________________________________________________________________________
